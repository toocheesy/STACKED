<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>STACKED!</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: Arial, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      min-height: 100vh;
      padding: 10px;
    }

    .game-container {
      max-width: 1200px;
      margin: 0 auto;
      display: flex;
      flex-direction: column;
      gap: 15px;
    }

    h1 {
      text-align: center;
      font-size: 2.5em;
      text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
      margin-bottom: 5px;
    }

    .game-container > p {
      text-align: center;
      font-size: 1.1em;
      opacity: 0.9;
      margin-bottom: 10px;
    }

    /* FIXED: Single message area */
    .ui-messages {
      display: flex;
      flex-direction: column;
      gap: 8px;
      margin: 10px 0;
    }

    .deck-count {
      background: rgba(255,255,255,0.1);
      padding: 8px 15px;
      border-radius: 20px;
      text-align: center;
      font-weight: bold;
      border: 2px solid rgba(255,255,255,0.2);
    }

    .message, .capture-type {
      background: rgba(255,255,255,0.15);
      padding: 10px 15px;
      border-radius: 15px;
      text-align: center;
      border: 1px solid rgba(255,255,255,0.3);
      font-size: 1em;
    }

    .capture-type {
      background: rgba(241, 196, 15, 0.2);
      border-color: rgba(241, 196, 15, 0.5);
    }

    /* FIXED: Table layout */
    .table {
      background: rgba(255,255,255,0.1);
      border-radius: 20px;
      padding: 20px;
      backdrop-filter: blur(10px);
      border: 2px solid rgba(255,255,255,0.2);
      display: grid;
      grid-template-columns: 1fr;
      gap: 20px;
      max-height: none; /* REMOVED HEIGHT CONSTRAINT */
    }

    /* Scores */
    .scores-row {
      display: flex;
      justify-content: space-around;
      gap: 20px;
    }

    .score {
      background: rgba(255,255,255,0.2);
      padding: 10px 20px;
      border-radius: 15px;
      text-align: center;
      font-weight: bold;
      flex: 1;
      border: 2px solid rgba(255,255,255,0.3);
    }

    /* FIXED: Combination area - flexible height */
    .combination-area {
      background: rgba(241, 196, 15, 0.15);
      border-radius: 15px;
      padding: 15px;
      border: 2px solid rgba(241, 196, 15, 0.4);
      min-height: 200px; /* MINIMUM not FIXED height */
      max-height: 400px; /* PREVENT excessive growth */
      overflow-y: auto; /* ALLOW SCROLL if needed */
    }

    .base-area {
      background: rgba(52, 152, 219, 0.3);
      border: 2px dashed rgba(52, 152, 219, 0.6);
      border-radius: 10px;
      padding: 15px;
      text-align: center;
      min-height: 80px;
      margin-bottom: 15px;
      position: relative;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: bold;
    }

    .capture-row {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr 1fr;
      gap: 10px;
    }

    .combo-slot {
      background: rgba(255,255,255,0.1);
      border: 2px dashed rgba(255,255,255,0.4);
      border-radius: 10px;
      padding: 10px;
      text-align: center;
      min-height: 80px;
      position: relative;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 0.9em;
      transition: all 0.3s ease;
    }

    .combo-slot.valid-combo {
      background: rgba(46, 204, 113, 0.3);
      border-color: rgba(46, 204, 113, 0.8);
      box-shadow: 0 0 15px rgba(46, 204, 113, 0.5);
    }

    /* Board */
    .board {
      background: rgba(34, 139, 34, 0.2);
      border-radius: 15px;
      padding: 15px;
      min-height: 120px;
      border: 2px solid rgba(34, 139, 34, 0.4);
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      align-items: center;
      justify-content: center;
    }

    /* Hands */
    .hands-row {
      display: grid;
      grid-template-columns: 2fr 1fr 1fr;
      gap: 20px;
      align-items: center;
    }

    .hand {
      display: flex;
      gap: 8px;
      justify-content: center;
      padding: 10px;
      border-radius: 10px;
      min-height: 100px;
      align-items: center;
    }

    .player-hand {
      background: rgba(46, 204, 113, 0.2);
      border: 2px solid rgba(46, 204, 113, 0.4);
    }

    .bot1-hand, .bot2-hand {
      background: rgba(231, 76, 60, 0.2);
      border: 2px solid rgba(231, 76, 60, 0.4);
    }

    /* Cards */
    .card {
      width: 70px;
      height: 95px;
      background: white;
      color: black;
      border-radius: 8px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: bold;
      font-size: 0.9em;
      cursor: pointer;
      transition: all 0.3s ease;
      border: 2px solid #ccc;
      box-shadow: 0 2px 4px rgba(0,0,0,0.2);
      user-select: none;
      position: relative;
    }

    .card.red {
      color: #e74c3c;
    }

    .card.back {
      background: linear-gradient(45deg, #3498db, #2980b9);
      color: white;
    }

    .card:hover {
      transform: translateY(-5px);
      box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    }

    .card.selected {
      transform: scale(1.1);
      box-shadow: 0 0 20px rgba(241, 196, 15, 0.8);
      z-index: 10;
    }

    .card.hint {
      animation: pulse 1s infinite;
      box-shadow: 0 0 20px rgba(46, 204, 113, 0.8);
    }

    @keyframes pulse {
      0%, 100% { transform: scale(1); }
      50% { transform: scale(1.05); }
    }

    /* Actions */
    .actions {
      display: flex;
      justify-content: center;
      gap: 15px;
      flex-wrap: wrap;
      margin-top: 15px;
    }

    button {
      background: linear-gradient(45deg, #3498db, #2980b9);
      color: white;
      border: none;
      padding: 12px 24px;
      border-radius: 25px;
      font-size: 1em;
      font-weight: bold;
      cursor: pointer;
      transition: all 0.3s ease;
      border: 2px solid rgba(255,255,255,0.2);
    }

    button:hover {
      background: linear-gradient(45deg, #2980b9, #1f618d);
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    }

    button:disabled {
      background: rgba(127,140,141,0.5);
      cursor: not-allowed;
      transform: none;
      box-shadow: none;
    }

    button#submit-btn {
      background: linear-gradient(45deg, #27ae60, #229954);
    }

    button#submit-btn:hover {
      background: linear-gradient(45deg, #229954, #1e8449);
    }

    /* Modals */
    dialog {
      background: rgba(44, 62, 80, 0.95);
      color: white;
      border: none;
      border-radius: 15px;
      padding: 30px;
      backdrop-filter: blur(10px);
      box-shadow: 0 10px 30px rgba(0,0,0,0.5);
      max-width: 600px;
      width: 90%;
    }

    dialog::backdrop {
      background: rgba(0,0,0,0.7);
    }

    .modal-content h2 {
      text-align: center;
      margin-bottom: 20px;
      color: #3498db;
    }

    .modal-content form {
      display: flex;
      flex-direction: column;
      gap: 15px;
    }

    .modal-content label {
      font-weight: bold;
      margin-bottom: 5px;
    }

    .modal-content select {
      padding: 8px 12px;
      border-radius: 8px;
      border: 1px solid #ccc;
      background: white;
      color: black;
    }

    .modal-buttons {
      display: flex;
      gap: 15px;
      justify-content: center;
      margin-top: 20px;
    }

    .tutorial-content {
      max-height: 400px;
      overflow-y: auto;
      margin-bottom: 20px;
    }

    .tutorial-content ul {
      margin-left: 20px;
      margin-top: 10px;
    }

    .tutorial-content li {
      margin: 8px 0;
    }

    /* RESPONSIVE */
    @media (max-width: 768px) {
      .hands-row {
        grid-template-columns: 1fr;
        gap: 10px;
      }
      
      .capture-row {
        grid-template-columns: 1fr 1fr;
        gap: 8px;
      }
      
      .card {
        width: 60px;
        height: 80px;
        font-size: 0.8em;
      }
      
      .actions {
        gap: 10px;
      }
      
      button {
        padding: 10px 20px;
        font-size: 0.9em;
      }
    }
  </style>
</head>
<body>
  <div class="game-container">
    <h1>Welcome to STACKED! ðŸŽ´</h1>
    <p>Capture cards by matching pairs (e.g., 5 captures 5) or sums (e.g., 5 + 5 captures 10). Score points to win!</p>

    <!-- Settings Modal -->
    <dialog id="settings-modal">
      <div class="modal-content">
        <h2>Settings</h2>
        <form>
          <label for="card-speed">Card Reveal Speed:</label>
          <select id="card-speed">
            <option value="slow">Slow</option>
            <option value="fast" selected>Fast</option>
          </select>

          <label for="sound-effects">Sound Effects:</label>
          <select id="sound-effects">
            <option value="on">On</option>
            <option value="off" selected>Off</option>
          </select>

          <label for="target-score">Target Score:</label>
          <select id="target-score">
            <option value="100">100</option>
            <option value="200">200</option>
            <option value="300">300</option>
            <option value="400">400</option>
            <option value="500" selected>500</option>
            <option value="600">600</option>
            <option value="700">700</option>
            <option value="800">800</option>
            <option value="900">900</option>
            <option value="1000">1000</option>
            <option value="1100">1100</option>
            <option value="1200">1200</option>
            <option value="1300">1300</option>
            <option value="1400">1400</option>
            <option value="1500">1500</option>
          </select>

          <label for="bot-difficulty">Bot Difficulty:</label>
          <select id="bot-difficulty">
            <option value="beginner">Beginner</option>
            <option value="intermediate" selected>Intermediate</option>
            <option value="legendary">Legendary</option>
          </select>

          <div class="modal-buttons">
            <button type="button" id="start-game-btn">Start Game</button>
            <button type="button" id="tutorial-btn">Tutorial</button>
          </div>
        </form>
      </div>
    </dialog>

    <!-- Tutorial Modal -->
    <dialog id="tutorial-modal">
      <div class="modal-content">
        <h2>How to Play STACKED!</h2>
        <div class="tutorial-content">
          <p>Welcome to <strong>STACKED!</strong>, a strategic card game where you capture cards to score points and outsmart your opponents!</p>
          <h3>Objective:</h3>
          <p>Be the first to reach the target score (set in settings) by capturing cards from the board.</p>
          <h3>How to Play:</h3>
          <ul>
            <li><strong>Setup:</strong> Each player (you and two bots) is dealt 4 cards. 4 cards are placed on the board.</li>
            <li><strong>Your Turn:</strong> Drag cards to the play areas to build a combo:
              <ul>
                <li><strong>Pair Capture:</strong> Place a matching card (from hand or board) in the Principal Match area and a matching card in the Play Area. Both areas must include at least one hand card and one board card.</li>
                <li><strong>Sum Capture (2-10 only):</strong> Place the target card in the Principal Match area. In the Play Area, use at least one hand card and one board card whose sum equals the Principal Match card's value. All cards are captured.</li>
              </ul>
            </li>
            <li><strong>Submit Combo:</strong> Click "Submit Move" to capture. Both play areas will glow green if your combo is valid. You can make multiple combos per turn!</li>
            <li><strong>End Turn:</strong> Drag a hand card to the board to place it and end your turn.</li>
            <li><strong>Reset Play Area:</strong> Click "Reset Play Area" to return cards to their original positions.</li>
            <li><strong>Scoring:</strong> Number cards (2-9) are worth 5 points, 10/J/Q/K are worth 10 points, Aces are worth 15 points.</li>
            <li><strong>Game End:</strong> The game ends when the deck runs out. The player with the highest score wins!</li>
          </ul>
          <h3>Tips:</h3>
          <ul>
            <li>Plan your combos carefully to maximize points.</li>
            <li>Watch the botsâ€”they play smarter at higher difficulty levels!</li>
            <li>Secure J, Q, K matches quicklyâ€”they're valuable but can't be used in sums!</li>
          </ul>
        </div>
        <button type="button" onclick="document.getElementById('tutorial-modal').close()">Close</button>
      </div>
    </dialog>

    <!-- FIXED: Single UI Messages Section -->
    <div class="ui-messages">
      <div class="deck-count" id="deck-count">Deck: 0 cards</div>
      <div class="message" id="message">Drag or tap cards to the play areas to capture, or place a card on the board to end your turn.</div>
      <div class="capture-type" id="capture-type">No cards in play areas.</div>
    </div>

    <div class="table">
      <!-- Scores -->
      <div class="scores-row">
        <div class="score player-score" id="player-score">Player: 0 pts</div>
        <div class="score bot1-score" id="bot1-score">Bot 1: 0 pts</div>
        <div class="score bot2-score" id="bot2-score">Bot 2: 0 pts</div>
      </div>

      <!-- FIXED: Play Areas with better structure -->
      <div class="combination-area" id="combination-area">
        <!-- Base Card Area (Top) -->
        <div class="base-area combo-slot" data-slot="base">Base Card</div>
        
        <!-- Capture Areas (Bottom Row) -->
        <div class="capture-row">
          <div class="combo-slot sum-area" data-slot="sum1">Sum Cards</div>
          <div class="combo-slot sum-area" data-slot="sum2">Sum Cards</div>
          <div class="combo-slot sum-area" data-slot="sum3">Sum Cards</div>
          <div class="combo-slot match-area" data-slot="match">Matching Cards</div>
        </div>
      </div>

      <!-- Board -->
      <div class="board" id="board"></div>

      <!-- Hands -->
      <div class="hands-row">
        <div class="hand player-hand" id="player-hand"></div>
        <div class="hand bot1-hand" id="bot1-hand"></div>
        <div class="hand bot2-hand" id="bot2-hand"></div>
      </div>
    </div>

    <!-- Bottom Actions -->
    <div class="actions">
      <button id="submit-btn">Submit Move</button>
      <button id="reset-play-area-btn">Reset Play Area</button>
      <button id="hint-btn">Hint</button>
      <button id="restart-btn">Restart Game</button>
    </div>
  </div>

  <script>
    // Placeholder for your existing JavaScript
    console.log("STACKED Game Ready! Add your main.js, deck.js, gameLogic.js, and ai.js files");
  </script>
</body>
</html>